		device	zxspectrum128

	ifdef isFX
		display "Compiling 'intro'"
	endif

@DEBUG = 0

		include "../kernel/constants.inc"

SCREEN = #4000

;;-----------------------------------------------------------------------------
	macro border n
	  if DEBUG
	    if n > 0
		ld	a,n
	    else
		xor	a
	    endif
		out	(254),a
	  endif
	endm

;;-----------------------------------------------------------------------------
		org	RUNZONE

start		ld	hl,introscreen
		ld	de,SCREEN
		ld	bc,#1B00
		ldir
		call	maketable

.loop:		border	0
		ei
		halt
		border	2
		call	followscene
		push	af
		border	1
		call	analyzethat
		pop	af
		jr	nz,.loop
		ld	a,1
		ld	(actborder),a
		ret

analyzethat:	ld	ix,ayval_buffer
		ld	bc,#FFFD
		ld	de,#0A0F	; d = register AY, e = max value
.chnC:		out	(c),d
		in	a,(c)
		cp	e
		jr	c,.chnC_noenv
		ld	a,e
.chnC_noenv:	ld	h,a

.chnB:		dec	d
		out	(c),d
		in	a,(c)
		cp	e
		jr	c,.chnB_noenv
		ld	a,e
.chnB_noenv:	ld	l,a
		add	a,h
		cp	(ix+2)
		jr	c,.chnB_ovr1
		ld	(ix+2),a
.chnB_ovr1:	rlca
		cp	(ix+1)
		jr	c,.chnB_ovr2
		ld	(ix+1),a
.chnB_ovr2:	sub	l
		cp	(ix)
		jr	c,.chnB_ovr3
		ld	(ix),a
.chnB_ovr3:	ld	a,h
		cp	(ix+3)
		jr	c,.chnB_ovr4
		ld	(ix+3),a
.chnB_ovr4:	srl	a
		cp	(ix+4)
		jr	c,.chnA
		ld	(ix+4),a

.chnA:		dec	d
		out	(c),d
		in	a,(c)
		cp	e
		jr	c,.chnA_noenv
		ld	a,e
.chnA_noenv:	ld	l,a
		add	a,h
		cp	(ix+7)
		jr	c,.chnA_ovr1
		ld	(ix+7),a
.chnA_ovr1:	rlca
		cp	(ix+8)
		jr	c,.chnA_ovr2
		ld	(ix+8),a
.chnA_ovr2:	sub	l
		cp	(ix+9)
		jr	c,.chnA_ovr3
		ld	(ix+9),a
.chnA_ovr3:	ld	a,h
		cp	(ix+6)
		jr	c,.chnA_ovr4
		ld	(ix+6),a
.chnA_ovr4:	srl	a
		cp	(ix+5)
		jr	c,drawln
		ld	(ix+5),a

drawln:		ld	hl,metersXY
		ld	a,10
.loop		ex	af,af'
		ld	a,#86 ; add a,(ix+N)
		ld	bc,.addsubAY+1
		bit	0,(hl)
		jr	z,.switchmode
		xor	#10
.switchmode	ld	(bc),a
		ld	c,(hl)
		inc	hl
		ld	b,(hl)
		inc	hl
		ld	e,(hl)
		inc	hl
		ld	d,(hl)
		inc	hl
		call	clearbar
		ld	a,c
.addsubAY	add	a,(ix)
		ld	e,a
		call	drawline
		inc	b
		call	drawline
		inc	b
		call	drawline
		inc	b
		call	drawline
		inc	ix
		ex	af,af'
		dec	a
		jr	nz,.loop
		ld	hl,reducto
		ld	b,10
reductor:	dec	ix
		ld	a,(ix)
		sub	(hl)
		inc	hl
		jr	nc,.nonzero
		xor	a
.nonzero:	ld	(ix),a
		djnz	reductor
		ret

;; Horizontal line
;; Input: B=Y C=X1 E=X2
drawline:	push	hl
		push	de
		push	bc
		ld	a,e
		cp	c
		jr	nc,.swap
		ld	e,c
		ld	c,a

.swap		ld	h,high tabbod
		ld	l,b
		ld	d,(hl)
		inc	h
		ld	a,(hl)
		inc	h
		ld	l,c
		or	(hl)
		ld	b,a
		inc	h

		ld	a,e
		or	$07
		sub	c
		and	$F8
		jr	nz,.phase2

		ld	a,(hl)
		inc	h
		ld	l,e
		and	(hl)
		ld	h,d
		ld	l,b
		or	(hl)
		ld	(hl),a
		pop	bc
		pop	de
		pop	hl
		ret

.phase2		sub	$08
		jr	nz,.phase3
		ld	a,(hl)
		inc	h
		ld	l,e
		ld	c,(hl)
		ld	h,d
		ld	l,b
		or	(hl)
		ld	(hl),a
		inc	l
		ld	a,c
		or	(hl)
		ld	(hl),a
		pop	bc
		pop	de
		pop	hl
		ret

.phase3		rrca
		rrca
		cpl
		and	$3E
		ld	(.reljump+1),a
		ld	a,(hl)
		inc	h
		ld	l,e
		ld	c,(hl)
		ld	h,d
		ld	l,b
		or	(hl)
		ld	(hl),a
		inc	l
		ld	a,$FF
.reljump	jr	$+2
	dup	31
		ld	(hl),a
		inc	l
	edup
		ld	a,c
		or	(hl)
		ld	(hl),a
		pop	bc
		pop	de
		pop	hl
		ret

clearbar:	xor	a
	dup 2
	dup 7
		ld	(de),a
		inc	e
	edup
		ld	(de),a
		inc	d
	dup 7
		ld	(de),a
		dec	e
	edup
		ld	(de),a
		inc	d
	edup
		org	$-1
		ret


maketable:	ld	de,SCREEN	;; Vytvorenie tabulky adries bodov a skokov
		ld	l,e		;; pre rychly prepocet suradnic pre interpolator
.loop		ld	h,high tabbod
		ld	(hl),d		;; Vyssi bajt adresy pre Y
		inc	h
		ld	(hl),e		;; Nizsi bajt adresy pre Y
		inc	h
		ld	a,l
		rrca
		rrca
		rrca
		and	#1F
		ld	(hl),a
		inc	h
		inc	d
		ld	a,d
		and	7
		jr	nz,.cont1
		ld	a,#20
		add	a,e
		ld	e,a
		jr	c,.cont1
		ld	a,#F8
		add	a,d
		ld	d,a
.cont1		ld	a,l
		and	7
		jr	nz,.cont2
		ld	c,#FF
.cont2		ld	(hl),c		;; Maska pre X1 zaciatok ciary vlavo
		inc	h
		srl	c
		ld	a,c
		cpl
		ld	(hl),a		;; Maska pre X2 koniec ciary vpravo
		inc	l
		jr	nz,.loop
		ret

metersXY:	db	136,66
		dw	#4A11
		db	136,74
		dw	#4A31
		db	136,82
		dw	#4A51
		db	136,90
		dw	#4A71
		db	136,98
		dw	#4A91
		db	119,66
		dw	#4A07
		db	119,74
		dw	#4A27
		db	119,82
		dw	#4A47
		db	119,90
		dw	#4A67
		db	119,98
		dw	#4A87

reducto:	db	3,4,2,1,1,1,1,2,4,3


followscene:	ld	ix,scenario
		ld	a,(ix)
		or	(ix+1)
		ret	z
		ld	c,a
		ld	b,(ix+1)
		ld	hl,(FRAMES)
		xor	a
		sbc	hl,bc
		ret	c
		inc	ix
		inc	ix
.readpatts	ld	a,(ix)
		inc	ix
		or	a
		jr	z,.finish
		ld	h,a
		ld	l,(ix)
		inc	ix
		ld	a,(ix)
		ld	e,a
		inc	ix
		ex	af,af'
		ld	a,32
		sub	e
		ld	e,a
		ld	d,0
		ld	b,(ix)
		inc	ix
		ld	a,(ix)
		inc	ix

.fillcolumn	ex	af,af'
		ld	c,a
		ex	af,af'
.fillrow	ld	(hl),a
		inc	hl
		dec	c
		jr	nz,.fillrow
		add	hl,de
		djnz	.fillcolumn
		jr	.readpatts

.finish:	ld	(followscene+2),ix
		dec	a
		ret

;; dw SYNC
;; loop {
;;   dw attraddr             \__
;;   db color, width, height /   => region x, y, w, h, color
;; }
;; db 0

	macro region x, y, w, h, color
.attraddr = (SCREEN + #1800) + (32 * y) + x
		db	high .attraddr
		db	low .attraddr
		db	w, h
		db	color
	endm

scenario:
;; kittens stripes 1
		dw	240
		region	 2, 16, 29,  1, 0q007
		region	 4, 16,  1,  1, 0q000
		db	0

		dw	242
		region	 2, 17, 29,  1, 0q007
		region	 2, 16, 29,  1, 0q002
		region	 4, 16,  1,  1, 0q000
		db	0

		dw	244
		region	 2, 18, 29,  1, 0q007
		region	 2, 17, 29,  1, 0q002
		region	 2, 16, 29,  1, 0q001
		region	 4, 16,  1,  1, 0q000
		db	0

		dw	246
		region	 2, 18, 29,  1, 0q002
		region	 2, 17, 29,  1, 0q001
		region	 2, 16, 29,  1, 0q000
		db	0

		dw	248
		region	 2, 18, 29,  1, 0q001
		region	 2, 17, 29,  1, 0q000
		db	0

		dw	250
		region	 2, 18, 29,  1, 0q000
		db	0

;; kittens stripes 2
		dw	288
		region	 2, 16, 29,  3, 0q101
		region	 4, 16,  1,  1, 0q000
		db	0

		dw	300
		region	 2, 16, 29,  1, 0q107
		region	 4, 16,  1,  1, 0q103
		db	0

		dw	307
		region	 2, 16, 29,  1, 0q101
		region	 2, 17, 29,  2, 0q000
		region	 4, 16,  1,  1, 0q103
		db	0

		dw	310
		region	 2, 17, 29,  1, 0q102
		db	0

		dw	312
		region	 2, 16, 29,  1, 0q107
		region	 2, 17, 29,  1, 0q101
		region	 2, 18, 29,  1, 0q102
		region	 4, 16,  1,  1, 0q103
		db	0

		dw	314
		region	 2, 17, 29,  1, 0q102
		region	 2, 18, 29,  1, 0q000
		db	0

		dw	314
		region	 2, 16, 29,  1, 0q101
		region	 4, 16,  1,  1, 0q103
		db	0

		dw	319
		region	 2, 18, 29,  1, 0q102
		region	 4, 16,  1,  1, 0q000
		db	0

		dw	325
		region	 2, 16, 29,  1, 0q001
		region	 2, 17, 29,  1, 0q107
		region	 2, 18, 29,  1, 0q102
		region	 4, 16,  1,  1, 0q000
		db	0

		dw	328
		region	 2, 17, 29,  1, 0q001
		region	 2, 18, 29,  1, 0q107
		db	0

		dw	331
		region	 2, 18, 29,  1, 0q001
		db	0

		; kit
		dw	348
		region	 2, 16,  5,  3, 0q102
		db	0
		dw	350
		region	 2, 16,  5,  3, 0q103
		db	0
		dw	352
		region	 2, 16,  5,  3, 0q107
		region	 4, 16,  1,  1, 0q103
		db	0

		; ten
		dw	355
		region	 7, 16,  6,  3, 0q102
		region	 4, 16,  1,  1, 0q000
		db	0
		dw	357
		region	 7, 16,  6,  3, 0q103
		db	0
		dw	359
		region	 7, 16,  6,  3, 0q107
		db	0

		; res
		dw	367
		region	13, 16,  7,  3, 0q102
		region	 4, 16,  1,  1, 0q103
		db	0
		dw	369
		region	13, 16,  7,  3, 0q103
		db	0
		dw	371
		region	13, 16,  7,  3, 0q107
		db	0

		; cue->rs
		dw	373
		region	20, 16,  6,  3, 0q102
		region	 4, 16,  1,  1, 0q000
		db	0
		dw	375
		region	20, 16,  6,  3, 0q103
		db	0
		dw	377
		region	20, 16,  6,  3, 0q107
		region	26, 16,  5,  3, 0q102
		db	0

		; rs
		dw	379
		region	26, 16,  5,  3, 0q103
		region	 4, 16,  1,  1, 0q103
		db	0
		dw	381
		region	26, 16,  5,  3, 0q107
		db	0

;; sindikat
		; s
		dw	384
		region	 0,  2,  5,  3, 0q107
		db	0
		dw	386
		region	 0,  2,  5,  3, 0q002
		db	0
		dw	389
		region	 0,  2,  5,  3, 0q000
		db	0

		; t
		dw	408
		region	27,  2,  5,  3, 0q107
		db	0
		dw	410
		region	27,  2,  5,  3, 0q002
		db	0
		dw	413
		region	27,  2,  5,  3, 0q000
		db	0

		; d
		dw	427
		region	11,  1,  5,  4, 0q107
		db	0
		dw	429
		region	11,  1,  5,  4, 0q002
		db	0
		dw	432
		region	11,  1,  5,  4, 0q000
		db	0

		; a
		dw	439
		region	22,  2,  5,  3, 0q107
		db	0
		dw	441
		region	22,  2,  5,  3, 0q002
		db	0
		dw	444
		region	22,  2,  5,  3, 0q000
		db	0

		; n
		dw	451
		region	 6,  2,  5,  3, 0q107
		db	0
		dw	453
		region	 6,  2,  5,  3, 0q002
		db	0
		dw	456
		region	 6,  2,  5,  3, 0q000
		db	0

		; i
		dw	456
		region	 5,  1,  1,  4, 0q107
		db	0
		dw	458
		region	 5,  1,  1,  4, 0q002
		db	0
		dw	461
		region	 5,  1,  1,  4, 0q000
		db	0

		; i
		dw	463
		region	16,  1,  1,  4, 0q107
		db	0
		dw	465
		region	16,  1,  1,  4, 0q002
		db	0
		dw	468
		region	16,  1,  1,  4, 0q000
		db	0

		; K - flashing
		dw	470
		region	17,  1,  5,  4, 0q107
		db	0
		dw	471
		region	17,  1,  5,  4, 0q000
		db	0
		dw	472
		region	17,  1,  5,  4, 0q107
		db	0
		dw	474
		region	17,  1,  5,  4, 0q000
		db	0
		dw	475
		region	17,  1,  5,  4, 0q107
		db	0
		dw	477
		region	17,  1,  5,  4, 0q000
		db	0

		; s
		dw	480
		region	17,  1,  5,  4, 0q107
		region	 0,  2,  5,  3, 0q107
		db	0
		dw	483
		region	 0,  2,  5,  3, 0q002
		db	0

		; t
		dw	504
		region	27,  2,  5,  3, 0q107
		db	0
		dw	507
		region	27,  2,  5,  3, 0q002
		db	0

		; d
		dw	523
		region	11,  1,  5,  4, 0q107
		db	0
		dw	526
		region	11,  1,  5,  4, 0q002
		db	0

		; a
		dw	535
		region	22,  2,  5,  3, 0q107
		db	0
		dw	538
		region	22,  2,  5,  3, 0q002
		db	0

		; n
		dw	547
		region	 6,  2,  5,  3, 0q107
		db	0
		dw	550
		region	 6,  2,  5,  3, 0q002
		db	0

		; i
		dw	552
		region	 5,  1,  1,  4, 0q107
		db	0
		dw	555
		region	 5,  1,  1,  4, 0q002
		db	0

		; i
		dw	559
		region	16,  1,  1,  4, 0q107
		db	0
		dw	562
		region	16,  1,  1,  4, 0q002
		db	0

;; sindikat flash
		dw	564
		region	 0,  1, 17,  4, 0q001
		region	22,  2, 10,  3, 0q001
		region	17,  1,  5,  4, 0q102
		db	0
		dw	566
		region	 0,  1, 17,  4, 0q000
		region	22,  2, 10,  3, 0q000
		region	17,  1,  5,  4, 0q001
		db	0
		dw	568
		region	17,  1,  5,  4, 0q000
		db	0
		dw	571
		region	 0,  1, 17,  4, 0q007
		region	22,  2, 10,  3, 0q007
		db	0
		dw	572
		region	 0,  1, 17,  4, 0q000
		region	22,  2, 10,  3, 0q000
		db	0
		dw	573
		region	17,  1,  5,  4, 0q107
		db	0
		dw	575
		region	17,  1,  5,  4, 0q000
		db	0
		dw	576
		region	 0,  1, 17,  4, 0q102
		region	22,  2, 10,  3, 0q102
		region	17,  1,  5,  4, 0q107
		region	12, 21,  8,  2, 0q107
		region	 4, 16,  1,  1, 0q107
		db	0

;; present
		dw	578
		region	12, 21,  8,  2, 0q106
		region	 4, 16,  1,  1, 0q103
		db	0
		dw	581
		region	12, 21,  8,  2, 0q105
		db	0
		dw	584
		region	12, 21,  8,  2, 0q103
		db	0
		dw	586
		region	12, 21,  8,  2, 0q102
		db	0

;; heart beating
		dw	588
		region	 4, 16,  1,  1, 0q002
		db	0

		dw	600
		region	 4, 16,  1,  1, 0q107
		db	0
		dw	602
		region	 4, 16,  1,  1, 0q103
		db	0
		dw	612
		region	 4, 16,  1,  1, 0q002
		db	0

		dw	619
		region	 4, 16,  1,  1, 0q107
		db	0
		dw	621
		region	 4, 16,  1,  1, 0q103
		db	0

		dw	631
		region	 4, 16,  1,  1, 0q107
		db	0
		dw	633
		region	 4, 16,  1,  1, 0q103
		db	0

		dw	643
		region	 4, 16,  1,  1, 0q107
		db	0
		dw	645
		region	 4, 16,  1,  1, 0q103
		db	0

		dw	648
		region	 4, 16,  1,  1, 0q107
		db	0
		dw	650
		region	 4, 16,  1,  1, 0q103
		db	0

;; squares
		dw	672
		region	16,  6,  8,  6, 0q111
		db	0

		dw	678
		region	 0, 12,  8,  6, 0q111
		db	0

		dw	684
		region	 8,  0,  8,  6, 0q111
		db	0

		dw	690
		region	24, 18,  8,  6, 0q111
		db	0

		dw	696
		region	 8,  6,  8,  6, 0q111
		db	0

		dw	702
		region	24,  0,  8,  6, 0q111
		db	0

		dw	708
		region	 8, 18,  8,  6, 0q111
		db	0

		dw	714
		region	16,  0,  8,  6, 0q111
		db	0

		dw	720
		region	 8, 12,  8,  6, 0q111
		db	0

		dw	726
		region	 0,  0,  8,  6, 0q111
		db	0

		dw	732
		region	24,  6,  8,  6, 0q111
		db	0

		dw	738
		region	 0, 18,  8,  6, 0q111
		db	0

		dw	744
		region	16, 12,  8,  6, 0q111
		db	0

		dw	750
		region	 0,  6,  8,  6, 0q111
		db	0

		dw	756
		region	16, 18,  8,  6, 0q111
		db	0

		dw	762
		region	24, 12,  8,  6, 0q111
		db	0

; end of session
		dw	0

ayval_buffer:	block	10,0

;;-----------------------------------------------------------------------------
		align	256

tabbod
introscreen:	incbin "base.scr"
		savebin "final.bin",start,$-start

;;-----------------------------------------------------------------------------
	ifndef isFX
		include "../kernel/kernel.micro.inc"
		savesna "intro.sna",microkernel
	endif
