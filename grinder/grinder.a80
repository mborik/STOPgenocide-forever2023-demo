		device	zxspectrum128

	ifdef isFX
		display "Compiling 'grinder'"
	endif

@DEBUG = 0
@LOOKUPS = #D800
@VOID = #57E0

		include "../kernel/constants.inc"

;;-----------------------------------------------------------------------------
	macro border n
	  if DEBUG
	    if n > 0
		ld	a,n
	    else
		xor	a
	    endif
		out	(254),a
	  endif
	endm

;;-----------------------------------------------------------------------------
		org	RUNZONE

start		ld	hl,#5800
		ld	de,#5801
		ld	bc,#02FF
		ld	(hl),0q077
		ldir
		ld	a,#10
		call	xchg.bnk
		ld	hl,lookupTables
		ld	de,LOOKUPS
		ld	bc,lookupTables.length
		ldir
		ld	hl,bgImage
		ld	de,#4000
		call	depack
		ld	a,7
		ld	(actborder),a
		out	(254),a
		ld	hl,displayList
		ld	de,displayList+1
		ld	bc,192 * 4
		ld	(hl),0
		ldir

mainloop	ei
		halt
		ld	(restoreSP + 1),sp

		border	1

		; Render sprites.
		ld	sp,displayList
		ld	bc,176 * 7
renderLoop	pop	hl
		pop	de
		ldi
		ldi
		ldi
		ldi
		ldi
		ldi
		ldi
		ld	a,(hl)
		ld	(de),a
		jp	pe,renderLoop

		border	2

		; Update animation phases.

		ld	a,(rotPhase + 1)
		add	a,8
		ld	(rotPhase + 1),a

animPhase	ld	de,sinusTabs
		inc	e
		ld	(animPhase + 1),de

		; Create display list.

		ld	sp,displayList + 768
		ld	l,256 - 192

displayLoop	ld	h,high vramTabs
		ld	b,(hl)			; Load bits 8..15 of VRAM address.
		inc	h
		ld	a,(de)			; Load horizontal sprite offset 0..31.
		or	(hl)			; Calculate bits 0..7 of VRAM address.
		ld	c,a

		push	bc			; Store destination VRAM address.

		inc	d
		inc	h
		ld	a,(de)			; Load horizontal sprite offset 0..7.
		or	(hl)			; Add correct dither line %111DD000.
		ld	b,a
		inc	h
		ld	a,(hl)			; Load rotation phase offset.
rotPhase	add	a,0
		ld	c,a

voidPhase	ld	a,-1
		cp	l
		jr	nc,.store
		ld	bc,VOID
.store		push	bc			; Store source sprite address.

		dec	d
		inc	e
		inc	l
		jp	nz,displayLoop

restoreSP	ld	sp,0

		; Random fade-in effect (modifies bits 8..15 of VRAM lookup).

rnd		ld	a,0
		ld	b,a
		add	a,a
		add	a,a
		add	a,b
		inc	a
		ld	(rnd + 1),a
randomFn	jr	$+2
		ld	h,(high vramTabs) - 1
		ld	l,a
		ld	a,(hl)
		inc	h
		ld	(hl),a

		border	0

		ld	bc,1920
		ld	hl,(FRAMES)
		xor	a
		sbc	hl,bc
		jp	c,mainloop

		ld	a,low ((fnAddGrinder - randomFn) - 2)
		ld	(randomFn+1),a
		jp	mainloop

fnAddGrinder	ld	b,high finalTabs
		ld	c,a
		ld	h,(high vramTabs) + 3
		ld	l,a
		ld	a,(bc)
		ld	(hl),a

		border	0

		ld	bc,2700
		ld	hl,(FRAMES)
		xor	a
		sbc	hl,bc
		jp	c,mainloop

		ld	a,low ((fnSlideDown - randomFn) - 2)
		ld	(randomFn+1),a
		jp	mainloop

fnSlideDown	ld	h,(high vramTabs) + 3
		ld	l,a
		ld	b,h
		cpl
		ld	c,a
		ld	a,(bc)
		ld	e,(hl)
		ld	(hl),a
		ld	a,e
		ld	(bc),a
.aniPhase	ld	hl,slideDownAni
		ld	a,(hl)
		ld	(voidPhase+1),a
		inc	hl
		ld	(.aniPhase+1),hl

		border	0

		ld	bc,2832
		ld	hl,(FRAMES)
		xor	a
		sbc	hl,bc
		jp	c,mainloop

		ret

;;-----------------------------------------------------------------------------

		; Display list. Total 192 * 4 = 768 bytes (unaligned).
		; Contains pairs { source address, destination VRAM address }.
displayList

bgImage		incbin "background.pak"

slideDownAni	include "slide-down.a80"

lookupTables
		; LOOKUP TABLES.

		; 2 * 256 bytes aligned = Sinus table (don't change the order of banks).
		; 5 * 256 bytes = VRAM pointer table (don't change the order of banks).
		; 8192 bytes = Sprites. Aligned to 8192 bytes.

X		equ	144			; Manipulating this constant moves the twister horizontally.

	phase	LOOKUPS

sinusTabs	include "sinus.inc"
finalTabs	include "xor-segments.inc"
		include "vram-hi.inc"

		; Additional lookup table used for fade-in (initially points to ROM).

vramTabs	block	256, 0
		include "vram-lo.inc"
		include "dither.inc"

		; XOR 7 segments to be copied here
		block	256,0

		include "sprites.inc"

	dephase

lookupTables.length = $-lookupTables


		savebin "final.bin",start,$-start

;;-----------------------------------------------------------------------------
	ifndef isFX
		define PRESET.border 7
		define PRESET.paper 0q117
		define PRESET.waitfor 1340
		include "../kernel/kernel.micro.inc"
		savesna "grinder.sna",microkernel
	endif
