		device	zxspectrum128

	ifdef isFX
		display "Compiling 'priskocmicka'"
	endif

@DEBUG = 0

		include "../kernel/constants.inc"

;;-----------------------------------------------------------------------------
	macro border n
	  if DEBUG
	    if n > 0
		ld	a,n
	    else
		xor	a
	    endif
		out	(254),a
	  endif
	endm

;;-----------------------------------------------------------------------------
		org	RUNZONE

start
		ei
		halt
		ld	a,#1D
		call	xchg.vram + 2

		ld	hl,gfx.jump.full1
		ld	de,#C000
		call	depack
		call	xchg.vram

		ld	b,3
		call	waitf

		ld	hl,gfx.jump.full2
		ld	de,#C000
		call	depack
		call	xchg.vram

		ld	b,3
		call	waitf

		ld	hl,gfx.jump.full3
		ld	de,#C000
		call	depack
		call	xchg.vram

		ld	b,3
		call	waitf

		ld	hl,gfx.jump.full4
		ld	de,#C000
		call	depack
		call	xchg.vram

		ei
		halt
		ld	hl,gfx.jump.full4
		ld	de,#C000
		call	depack
		call	xchg.vram

		ei
		halt
		ld	hl,gfx.jump.part5
		ld	de,#D000
		call	depack
		call	xchg.vram

		ld	b,5
		call	waitf

		ld	hl,gfx.jump.part6
		ld	de,#D000
		call	depack
		call	xchg.vram

		ld	b,5
		call	waitf

		ld	hl,gfx.jump.part7
		ld	de,#D000
		call	depack
		call	xchg.vram

		ld	b,6
		call	waitf

		ld	hl,gfx.stand.part8
		ld	de,#C000
		call	depack
		call	xchg.vralign

		ld	b,6
		call	waitf

		ld	hl,gfx.stand.part9
		ld	de,#4000
		call	depack

		ld	b,28
.standloop	push	bc
		call	xchg.vramX
		ld	b,12
		call	waitf
		pop	bc
		djnz	.standloop

; wait for dead
		ld	bc,1296
		call	waitforit

		ld	hl,gfx.dead.part1
		ld	de,#D000
		call	depack
		call	xchg.vram

		ld	hl,gfx.dead.part2
		ld	de,#D000
		call	depack
		call	xchg.vram

		ld	b,5
		call	waitf

		ld	hl,gfx.dead.part3
		ld	de,#D000
		call	depack
		call	xchg.vram

		ld	b,5
		call	waitf

		ld	hl,gfx.dead.part4
		ld	de,#D000
		call	depack
		call	xchg.vram

		ld	b,5
		call	waitf

		ld	hl,gfx.dead.part5
		ld	de,#D000
		call	depack

		ld	a,(xchg.vram+1)
		or	7
		call	xchg.vramX+3

		ld	hl,#C000
		ld	de,#4000
		ld	bc,#1B00
		ldir

		ei
		halt
		ld	a,#17
		call	xchg.bnk
		ld	hl,gfx.title
		ld	de,#C000
		call	depack

; wait for end
		ld	bc,1339
		jp	waitforit


waitf:		ei
		halt
		call	followscene
		djnz	waitf
		ret

xchg.vralign	ld	a,(xchg.vram+1)
		or	7
		jr	xchg.vramX+3
xchg.vramX	ld	a,(act128page)
		xor	8
		ld	(act128page),a
		ld	bc,page128
		out	(c),a
		ret

followscene:	ld	ix,scenario
		ld	a,(ix)
		or	(ix+1)
		ret	z
		ld	e,a
		ld	d,(ix+1)
		ld	hl,(FRAMES)
		xor	a
		sbc	hl,de
		ret	c
		inc	ix
		inc	ix
		exx
.readpatts	ld	a,(ix)
		inc	ix
		or	a
		jr	z,.finish
		ld	h,a
		ld	l,(ix)
		inc	ix
		ld	a,(ix)
		ld	e,a
		inc	ix
		ex	af,af'
		ld	a,32
		sub	e
		ld	e,a
		ld	d,0
		ld	b,(ix)
		inc	ix
		ld	a,(ix)
		inc	ix

.fillcolumn	ex	af,af'
		ld	c,a
		ex	af,af'
.fillrow	ld	(hl),a
		set	7,h
		ld	(hl),a
		res	7,h
		inc	l
		dec	c
		jr	nz,.fillrow
		add	hl,de
		djnz	.fillcolumn
		jr	.readpatts

.finish:	ld	(followscene+2),ix
		dec	a
		exx
		ret

;; dw SYNC
;; loop {
;;   dw attraddr             \__
;;   db color, width, height /   => region x, y, w, h, color
;; }
;; db 0

	macro region x, y, w, h, color
.attraddr = #5800 + (32 * y) + x
		db	high .attraddr
		db	low .attraddr
		db	w, h
		db	color
	endm

	macro hilite snc, x, y, w, h, color
.sync = snc
.c = color - 6
	dup 6
.sync = .sync + 2
.c = .c + 1
		dw	.sync
		region	x, y, w, h, .c
		db	0
	edup
	endm

scenario:
		hilite	 864, 2,  2, 19, 2, 0q117
		hilite	 936, 3,  5, 26, 3, 0q117
		hilite	 960, 2,  8, 28, 3, 0q117
		hilite	1128, 2, 12, 28, 3, 0q117
		dw	0


	module gfx
jump
.full1		incbin "gfx/01.pak"
.full2		incbin "gfx/02.pak"
.full3		incbin "gfx/03.pak"
.full4		incbin "gfx/04.pak"
.part5		incbin "gfx/05.pak"
.part6		incbin "gfx/06.pak"
.part7		incbin "gfx/07.pak"
stand
.part8		incbin "gfx/08.pak"
.part9		incbin "gfx/09.pak"
dead
.part1		incbin "gfx/11.pak"
.part2		incbin "gfx/12.pak"
.part3		incbin "gfx/13.pak"
.part4		incbin "gfx/14.pak"
.part5		incbin "gfx/15.pak"
title		incbin "gfx/title.pak"

	endmodule

		savebin "final.bin",start,$-start

;;-----------------------------------------------------------------------------
	ifndef isFX
		define	PRESET.border 1
		define	PRESET.paper 0q111
		define	PRESET.waitfor 766
		include "../kernel/kernel.micro.inc"
		savesna "priskocmicka.sna",microkernel
	endif
