		device	zxspectrum128

	ifdef	isFX
		display	"Compiling 'lucy'"
	endif

		include	"../kernel/constants.inc"

;;-----------------------------------------------------------------------------

SYNC = 5520
BLIK_WHITE = #17
BLIK_BLUEY = #1F


		org	RUNZONE


start		ei
		halt
	ifndef isFX
		ld	hl,LUCYSCR
		ld	de,#4000
		ld	bc,#1B00
		ldir
		ld	a,#CD
		ld	hl,NOOP
		ld	(IMCALL),a
		ld	(IMCALL+1),hl
	endif

.mainloop	ei
		halt
		ld	b,0
.latetiming	ex	(sp),iy
		ex	(sp),iy
		ex	(sp),iy
		ex	(sp),iy
		djnz	.latetiming
		call	TWISTER_UPDATE
		call	INTER_UPDATE
		ld	a,(TWISTER+1)
		cp	4
		jr	nz,.mainloop

		call	PLASMA
		ei
		halt
		ld	a,BLIK_WHITE
		call	xchg.bnk
		ld	hl,#4000
		ld	de,#C000
		ld	bc,#1B00
		ldir
		ei
		halt
		ld	a,BLIK_BLUEY
		call	xchg.bnk
		ld	hl,#5800
		ld	de,#5801
		ld	bc,#02FF
		ld	(hl),0q077
		ldir
		ld	hl,BLIK_SHEDULER
		ld	(IMCALL+1),hl
		call	HIDE_OKNO_LUCY
.awaiter	ld	a,1
		or	a
		jr	nz,.awaiter
		inc	a
		ld	(IMCALL),a
		ret

BLIK_SHEDULER	di
		ld	(.BACKSP+1),sp
.SCNPTR		ld	sp,TIMER_BLIK
		pop	bc
		ld	hl,(FRAMES)
		xor	a
		sbc	hl,bc
		jr	c,.BACKSP
		pop	hl
		ld	(.SCNPTR+1),sp
		or	l
		jr	nz,.SETBNK
		ld	(start.awaiter+1),a
		ld	h,7
		ld	a,BLIK_WHITE
.SETBNK		call	xchg.bnk
		ld	a,h
		ld	(actborder),a
		out	(254),a
.BACKSP		ld	sp,0
		ei
		ret

PART_SHEDULER
TIMER_POS	ld	hl,TIMER_TAB
		ld	c,(hl)
		inc	hl
		ld	b,(hl)
		inc	hl
		ex	de,hl
		ld	hl,(FRAMES)
		or	a
		sbc	hl,bc
		ret	c
		ex	de,hl
		ld	e,(hl)
		inc	hl
		ld	d,(hl)
		inc	hl
		ld	(TIMER_POS+1),hl
		ex	de,hl
		ld	(UPDATE_CALL+1),hl
UPDATE_CALL	jp	NOOP

TWISTER_UPDATE	call	PART_SHEDULER
		ld	a,(TWISTER+1)
		or	a
		call	nz,TWISTER
		ret

ENABLE_EFFECT	ld	hl,TWISTER+1
		inc	(hl)
		ld	hl,NOOP
		ld	(UPDATE_CALL+1),hl
NOOP		ret

END_TWISTER	ld	a,4
		ld	(TWISTER+1),a
		ret

TWISTER		ld	a,0 ;flag, ktory urcuje stav twisteru
		dec	a
		call	z,TWISTER_STAT1
		dec	a
		dec	a
		call	z,TWISTER_STAT3
		dec	a
		ret	z

TWISTER_ANGLE	ld	hl,0
		inc	h
		inc	h
		inc	h
		dec	l
		dec	l
		ld	(TWISTER_ANGLE+1),hl
		ld	c,l
		ld	b,h
TWISTER_VRAM	ld	de,4F56h
		xor	a
		ld	(de),a
		inc	e
		ld	(de),a
		inc	e
		ld	(de),a
		dec	e
		dec	e
		call	upde

TWISTER_HEIGHT	ld	a,1
TWISTER_FULL	ex	af,af'
		ld	hl,TWISTER_DATA
		call	TWISTER_LINE
		ex	af,af'
		dec	a
		ret	z
		ex	af,af'
		ld	hl,TWISTER_DATA+96
		call	TWISTER_LINE
		ex	af,af'
		dec	a
		jr	nz,TWISTER_FULL

		ret

TWISTER_LINE	push	hl
		ld	h,SIN_TABLE/256
		ld	l,c
		ld	a,(hl)
		ld	l,b
		add	a,(hl)
		ld	l,a
		add	a,a
		add	a,l
		pop	hl
		add	a,l
		ld	l,a
		;ld	a,h
		;adc	a,0
		;ld	h,a

		ld	a,e
		ldi
		ldi
		ldi
		inc	bc
		inc	bc
		inc	bc
		ld	e,a

		call	upde

		dec	b
		dec	b
		inc	c
		inc	c
		inc	c
		inc	c
		inc	c
		ret

;twister rastie
TWISTER_STAT1	ex	af,af'
		ld	a,(TWISTER_HEIGHT+1)
		inc	a
		ld	(TWISTER_HEIGHT+1),a
		cp	16
		jr	nc,TWISTER_STAT1P
		ld	de,4800h+19
		ld	c,a
		ld	a,16
		sub	c
		ld	b,a
		cp	8
		ccf
		sbc	a,a
		and	32
		add	a,e
		ld	e,a
		ld	a,b
		and	7
		add	a,d
		ld	d,a
		ld	hl,LUCY_HAIR+15
		ld	a,l
		sub	c
		ld	l,a
		ld	a,(hl)
		cpl
		ld	(de),a
		ld	a,c
TWISTER_STAT1P	cp	87
		jr	nz,TWISTER_STAT1R
		ld	hl,TWISTER+1
		inc	(hl)
TWISTER_STAT1R	ex	af,af'
		ret

TWISTER_STAT3	ex	af,af'
TWISTER_STAT3X	ld	a,0
		xor	1
		ld	(TWISTER_STAT3X+1),a
		jr	nz,TWISTER_STAT3R
		ld	hl,(TWISTER_VRAM+1)
		ex	de,hl
		call	upde
		ex	de,hl
		ld	(TWISTER_VRAM+1),hl
		ld	a,(TWISTER_HEIGHT+1)
		dec	a
		jr	nz,TWISTER_STAT3R
		ld	(TWISTER_HEIGHT+1),a
		ld	hl,TWISTER+1
		ld	(hl),a
TWISTER_STAT3R	ld	c,a
		ld	a,87
		sub	c
		cp	16
		jr	nc,TWISTER_STAT3P
		ld	de,4800h+19
		ld	c,a
		ld	a,16
		sub	c
		ld	c,a
		cp	8
		ccf
		sbc	a,a
		and	32
		add	a,e
		ld	e,a
		ld	a,c
		and	7
		add	a,d
		ld	d,a
		ld	a,-1
		ld	(de),a
TWISTER_STAT3P	ex	af,af'
		ret

START_PLASMA
PLASMA		ld	hl,PLASMA_FRAME
		ld	(DEPAK_TOP+1),hl
		ex	hl,de
		ld	hl,PLASMA_ANIM
		call	DEC40
		jr	PLASMA

VIEW_SPRITE

		ei
		halt

		exx

DEPAK_TOP	ld	hl,PLASMA_FRAME
		call	VIEW_SPRITE0

		ld	hl,(DEPAK_TOP+1)
		ld	de,432
		add	hl,de
		ld	(DEPAK_TOP+1),hl

		ld	a,(DEPAK_TOP+1)
		cp	PLASMA_FRAME/256+16+2
		jr	nc,VIEW_SPRITE_C
		exx
		ret

VIEW_SPRITE_C	ld	hl,PLASMA_FRAME+432
		ld	de,PLASMA_FRAME
		ld	bc,(16+2)*256
		ldir
		ld	hl,(DEPAK_TOP+1)
		ld	de,-432
		add	hl,de
		ld	(DEPAK_TOP+1),hl

		call	PART_SHEDULER

PLASMA_PHASE	ld	a,0
		dec	a
		call	z,PLASMA_GROW	;1
		ld	a,(PLASMA_PHASE+1)
		cp	2
		call	z,PLASMA_SHRINK	;2
		ld	a,(PLASMA_PHASE+1)
		cp	3
		jr	nz,NO_PLASMA_END
		pop	bc
		pop	bc
		pop	bc
		pop	bc
		ret

NO_PLASMA_END	exx
		push	bc
		ex	de,hl
		ld	bc,-432
		add	hl,bc
		ex	de,hl
		;add	hl,bc
		pop	bc
		ret

PLASMA_GROW	ld	a,(PLASMA_SKIP+2)
		or	a
		ret	z
		dec	a
		dec	a
		ld	(PLASMA_SKIP+2),a
		sub	72-16
		ret	c
HAIR_GROW	ld	l,a
		ld	de,4800h+19
		add	a,d
		ld	d,a
		cp	50h
		jr	c,PLASMA_GROW1
		sub	8
		ld	d,a
		ld	a,e
		add	a,32
		ld	e,a
PLASMA_GROW1	ld	bc,LUCY_HAIR
		ld	h,0
		add	hl,bc
		ld	a,(hl)
		cpl
		ld	(de),a
		inc	hl
		inc	d
		ld	a,(hl)
		cpl
		ld	(de),a
		ret

PLASMA_SHRINK	ld	a,(PLASMA_SKIP+2)
		cp	72
		ret	z
		inc	a
		inc	a
		ld	(PLASMA_SKIP+2),a
		sub	72-16
		ret	c
HAIR_SHRINK	ld	de,4800h+19
		add	a,d
		ld	d,a
		cp	50h
		jr	c,PLASMA_SHRINK1
		sub	8
		ld	d,a
		ld	a,e
		add	a,32
		ld	e,a
PLASMA_SHRINK1	ld	a,255
		ld	(de),a
		inc	hl
		inc	d
		ld	(de),a
		ret

ENABLE_P_GROW	ld	a,1
		ld	(PLASMA_PHASE+1),a
		ret
ENABLE_P_SHRINK	ld	a,2
		ld	(PLASMA_PHASE+1),a
		ret
END_PLASMA	ld	a,3
		ld	(PLASMA_PHASE+1),a
		ret

ENABLE_HEART	ld	hl,4D56h
		ld	(INTER_POS+1),hl
		ld	a,1
		ld	(INTER_PHASE+1),a
		ret

INTER_UPDATE	ld	a,0
		xor	1
		ld	(INTER_UPDATE+1),a
		ret	nz

INTER_PHASE	ld	a,0
		or	a
		ret	z

		cp	56-20
		jr	c,INTER_UPDATE0
		ld	l,a
		ld	a,56
		sub	l
INTER_UPDATE0	cp	20
		jr	c,INTER_UPDATE00
		ld	a,20
INTER_UPDATE00

INTER_GFX	ld	hl,INTER_HEART
INTER_POS	ld	de,4D56h
INTER_UPDATE1	ex	af,af'
		ldi
		ldi
		ldi
		dec	e
		dec	e
		dec	e
		call	downde
		ex	af,af'
		dec	a
		jr	nz,INTER_UPDATE1
		ld	(de),a
		inc	e
		ld	(de),a
		inc	e
		ld	(de),a
		call	downde
		xor	a
		ld	(de),a
		dec	e
		ld	(de),a
		dec	e
		ld	(de),a

		ld	de,(INTER_POS+1)
		call	upde
		ld	(INTER_POS+1),de

		ld	a,(INTER_PHASE+1)
		inc	a
		ld	(INTER_PHASE+1),a

		cp	16
		jr	nc,INTER_NOHAIR
		ld	l,a
		ld	a,16
		sub	l
		call	HAIR_GROW
		jr	INTER_NOHAIR2
INTER_NOHAIR
		ld	a,(INTER_PHASE+1)
		cp	40-16
		jr	c,INTER_NOHAIR2
		cp	40
		jr	nc,INTER_NOHAIR2
		ld	l,a
		ld	a,39
		sub	l
		call	HAIR_SHRINK
INTER_NOHAIR2

		ld	a,(INTER_PHASE+1)
		cp	56
		ret	nz
		xor	a
		ld	(INTER_PHASE+1),a
		ld	de,(INTER_POS+1)
		call	downde
		xor	a
		ld	(de),a
		inc	e
		ld	(de),a
		inc	e
		ld	(de),a
		ret


VIEW_SPRITE0	ld	de,4720h+19
PLASMA_SKIP	ld	xh,72
		ld	a,3*8
VIEW_SPRITE1	push	af
		push	hl
		ld	a,xh
		or	a
		jr	z,VIEW_SPRITE10
		ld	hl,PLASMA_ZERO
		dec	xh
VIEW_SPRITE10	ld	a,e
		ldi
		ldi
		ldi
		ldi
		ldi
		ldi
		ldi
		ldi
		pop	hl
		ld	bc,8
		add	hl,bc
		ld	e,a
		call	downde
		pop	af
		dec	a
		jr	nz,VIEW_SPRITE1
		inc	e
VIEW_SPRITE1_0	ld	a,3*8
VIEW_SPRITE2	push	af
		push	hl
		ld	a,xh
		or	a
		jr	z,VIEW_SPRITE20
		ld	hl,PLASMA_ZERO
		dec	xh
VIEW_SPRITE20	ld	a,e
		ldi
		ldi
		ldi
		ldi
		ldi
		ldi
		pop	hl
		ld	bc,6
		add	hl,bc
		ld	e,a
		call	downde
		pop	af
		dec	a
		jr	nz,VIEW_SPRITE2
		inc	e
		ld	a,3*8
VIEW_SPRITE3	push	af
		push	hl
		ld	a,xh
		or	a
		jr	z,VIEW_SPRITE30
		ld	hl,PLASMA_ZERO
		dec	xh
VIEW_SPRITE30	ld	a,e
		ldi
		ldi
		ldi
		ldi
		pop	hl
		ld	bc,4
		add	hl,bc
		ld	e,a
		call	downde
		pop	af
		dec	a
		jr	nz,VIEW_SPRITE3
		ret

DEC40
		ld	a,80h
		ex	af,af'
MS		ldi
M0		ld	bc,2FFh
M1		ex	af,af'
M1X		add	a,a
		jr	nz,M2
		ld	a,(HL)
		inc	hl
		rla
M2		rl	c
		jr	nc,M1X
		ex	af,af'
		djnz	X2
		ld	a,2
		sra	c
		jr	c,N1
		inc	a
		inc	c
		jr	z,N2
		ld	bc,33Fh
		jr	M1

X2		djnz	X3
		srl	c
		jr	c,MS
		inc	b
		jr	M1
X6
		add	a,c
N2
		ld	bc,4FFh
		jr	M1
N1
		inc	c
		jr	nz,M4
		ex	af,af'
		inc	b
N5		rr	c
		ret	c
		rl	b
		add	a,a
		jr	nz,N6
		ld	a,(HL)
		inc	hl
		rla
N6		jr	nc,N5
		ex	af,af'
		add	a,b
		ld	b,6
		jr	M1
X3
		djnz	X4
		ld	a,1
		jr	M3
X4		djnz	X5
		inc	c
		jr	nz,M4
		ld	bc,51Fh
		jr	M1
X5
		djnz	X6
		ld	b,c
M4		ld	c,(HL)
		inc	hl
M3		dec	b
		push	hl
		ld	l,c
		ld	h,b
		add	hl,de
		ld	c,a
		ld	b,0
		ldir
;------------------------------------
		push	af
		ld	a,(DEPAK_TOP+2)
		inc	a
		inc	a
		cp	d
		call	c,VIEW_SPRITE
		pop	af

;------------------------------------
		pop	hl
		jr	M0


LUCY_HAIR	db	00110000b
		db	00111000b
		db	00011000b
		db	00011100b
		db	00001100b
		db	00001100b
		db	00001100b
		db	00001100b

		db	00001100b
		db	00001100b
		db	00011100b
		db	00011000b
		db	00111000b
		db	01110000b
		db	01100000b
		db	00000000b

INTER_HEART	db	00000111b, 10000011b, 11000000b
		db	00011111b, 11000111b, 11110000b
		db	00111111b, 11101111b, 11111000b
		db	01111111b, 11101111b, 11111100b
		db	01111111b, 11011111b, 11111100b
		db	11111111b, 10111111b, 11111110b
		db	11111111b, 11011111b, 11111110b
		db	11111111b, 11101111b, 11111110b
		db	11111111b, 11110111b, 11111110b
		db	01111111b, 11111011b, 11111100b
		db	01111111b, 11110111b, 11111100b
		db	00111111b, 11101111b, 11111000b
		db	00011111b, 11011111b, 11110000b
		db	00001111b, 10111111b, 11100000b
		db	00000111b, 01111111b, 11000000b
		db	00000011b, 10111111b, 10000000b
		db	00000001b, 11011111b, 00000000b
		db	00000000b, 11101110b, 00000000b
		db	00000000b, 01101100b, 00000000b
		db	00000000b, 00101000b, 00000000b
PLASMA_ZERO	block	8,0

TIMER_TAB	dw	SYNC, ENABLE_EFFECT
		dw	SYNC + 240, ENABLE_EFFECT
		dw	SYNC + 320, ENABLE_HEART
		dw	SYNC + 480, END_TWISTER
		dw	SYNC + 480, ENABLE_P_GROW
		dw	SYNC + 800, ENABLE_P_SHRINK
		dw	SYNC + 967, END_PLASMA
		dw	0

TIMER_BLIK	dw	SYNC + 978
		db	BLIK_WHITE, 7

		dw	SYNC + 982
		db	BLIK_BLUEY, 1

		dw	SYNC + 983
		db	BLIK_WHITE, 7

		dw	SYNC + 987
		db	BLIK_BLUEY, 1

		dw	SYNC + 995
		db	BLIK_WHITE, 7

		dw	SYNC + 999
		db	BLIK_BLUEY, 1

		dw	SYNC + 1003
		dw	0


		include "transition.a80"
PLASMA_ANIM	incbin "anim4.bin.mlz"

		align	256
SIN_TABLE:  ; check listing file to see resulting table bytes
    lua allpass
        for i = 0, 255, 1 do
            sj.add_byte(math.floor(16.0 + math.sin(math.pi * i / 128.0) * 15.5))
        end
    endlua

TWISTER_DATA	incbin "twistdata.bin"
		incbin "twistdata.bin",0,64


		savebin "final.bin",start,$-start


		align	256

PLASMA_FRAME	ds	(15 + 2) * 256

;;-----------------------------------------------------------------------------
	ifndef isFX
	opt push listoff
LUCYSCR		incbin "../lucyshow/lucyshow.scr"

		define PRESET.border 1
		define PRESET.paper 0q011
		define PRESET.waitfor SYNC-1
		include "../kernel/kernel.micro.inc"
		savesna "lucy.sna",microkernel
	opt pop
	endif
